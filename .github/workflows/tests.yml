name: tests

on:
  push:
    branches:
      - master
      - staged
  pull_request:
    branches:
      - master

jobs:
  core:
    strategy:
      matrix:
        node: ['14.x']
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'
      - run: npm i -g npm
      - run: npm run ci-install

      - run: npm run compile
        working-directory: ./src/core
      - run: npm run test
        working-directory: ./src/core


  periphery:
    strategy:
      matrix:
        node: ['14.x']
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}

    defaults:
      run:
        working-directory: ./src/periphery

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - run: npm i -g npm
        working-directory: ./
      - run: npm run bootstrap
        working-directory: ./
      - run: npm run compile
        working-directory: ./src/core

      - run: npm install && npm run compile
      - run: npm run test
  
  farming:
    strategy:
      matrix:
        node: ['14.x']
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}

    defaults:
      run:
        working-directory: ./src/tokenomics

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - run: npm i -g npm
        working-directory: ./
      - run: npm run bootstrap
        working-directory: ./
      - run: npm run compile
        working-directory: ./src/core

      - run: npm install && npm run compile
        working-directory: ./src/periphery

      - run: npm install && npm run compile
      - run: npm run test
